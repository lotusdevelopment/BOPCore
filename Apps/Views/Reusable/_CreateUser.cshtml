@model int
@*This switch set the graphication of the forms
    Values:
    1. For superheroes: can do anything
    2. For sales admin: can reate for it's comapny any role
    3. For any sales role except sales_admin, can create seller of their lower level
*@
@{
    switch (Model)
    {
        case 1:
            @Html.Partial("~/Views/AppsAdmin/_CreateUser.cshtml")
            break;
        case 2:
            @Html.Partial("~/Views/Sales/_CreateUserAdmin.cshtml")
            break;
        case 3:
            @Html.Partial("~/Views/Sales/_CreateUserDefault.cshtml")
            break;
    }
}

@{
    if (Model != 2)
    {
        <script>
    $(function () {
        $("form").on("submit", function (e) {
            e.preventDefault();
            var flag = 1;
            var group = $("#sGroups").val();
            var ucardTil = 0;
            if (@Model===3)
                group = $lf.ss.us.User.GroupId;
            if (@Model !== 1)
                ucardTil = $lf.ss.us.User.UserIcard;
            var dt = {
                Name: $("#Name").val(),
                UserLastname: $("#LastName").val(),
                UserEmail: $("#example-email").val(),
                GroupId: parseInt(group),
                UserIcard: $("#userId").val(),
                Birthdate: $("#Bdth").val(),
                CellPhone: $("#CPhn").val(),
                Gender: $("#Genre").val(),
                Address: $("#Addr").val(),
                RoleId: parseInt($("#roles").val()),
                LanguageId: parseInt($("#languages").val()),
                CountryId: parseInt($("#Countries").val()),
                Flag: flag,
                UserIcardtitular: parseInt(ucardTil),
                Country: $("#Countries option:selected").text()
            }
            $.ajax({
                type: "POST",
                url: "/Account/CreateUser",
                data: { usr: dt },
                success: function () {
                    alert("Proccess sent to the queue.");
                    location.href = "/";
                },
                error: function (xhr) {
                    alert("Opss!! we had an issue, please try again");
                    console.log(JSON.stringify(xhr));
                    return;
                },
                dataType: "json",
                async: true
            });
        });
        FillGroups();
        FillRoles();
        FillLanguages();
        FillCountries();
    });
    function FillRoles() {
        $.ajax({
            url: $lf.ss.cs.Company + "GetRoles",
            success: function (data) {
                var cr = $lf.ss.us.Roles[0].RoleLevel;
                var ndata = [];
                $.each(data, function (i, j) {
                    if (j.RoleLevel > cr)
                        ndata.push(j);
                });
                $.each(ndata, function (i, j) {
                    $('#roles').append('<option value="' + j.RoleId + '">' + j.Role + '</option>');
                });
            },
            error: function (xhr) {
                console.log(JSON.stringify(xhr));
            },
            dataType: "json",
            async: true
        });
    }
    function FillLanguages() {
        $.ajax({
            url: $lf.ss.cs.Company + "GetLanguages",
            success: function (data) {
                $.each(data, function (i, j) {
                    $('#languages').append('<option value="' + j.LanguageId + '">' + j.LanguageDescription + '</option>');
                });
            },
            error: function (xhr) {
                console.log(JSON.stringify(xhr));
            },
            dataType: "json",
            async: true
        });
    }
    function FillGroups() {
        $.ajax({
            url: $lf.ss.cs.Company + "GetGroupsEntity/" + $lf.ss.us.Company.id,
            success: function (data) {
                if (data.length === 0) {
                    $('#sGroups').append('<option value="CG"> Create Groups </option>');
                } else {
                    $.each(data, function (i, j) {
                        if (!j.Group.toUpperCase().includes("ADMIN"))
                            $('#sGroups').append('<option value="' + j.GroupId + '">' + j.Group + '</option>');
                    });
                }
                GroupsOptions();
            },
            error: function (xhr) {
                console.log(JSON.stringify(xhr));
            },
            dataType: "json",
            async: true
        });
    }
    function FillCountries() {
        $.ajax({
            url: $lf.ss.cs.Company + "GetCountriesAlone",
            success: function (data) {
                $.each(data, function (i, j) {
                    $('#Countries').append('<option value="' + j.CountryId + '">' + j.Country + '</option>');
                });
            },
            error: function (xhr) {
                console.log(JSON.stringify(xhr));
            },
            dataType: "json",
            async: true
        });
    }
    function GroupsOptions() {
        $("#sGroups").change(function () {
            if ($(this).val() === "CG")
                window.location.href = "@Url.Action("CreateGroup", "Sales")";
            else {
                if (!IsNullOrEmptyString($(this).val()))
                    $("#uCreation").show();
                else
                    $("#uCreation").hide();
            }
        });
    }
        </script>
    }
    else
    {
        <script>
            (function () {
                var regresives = [];
                var currentId;
                $(function () {
                    if (IsNullOrEmptyString(getUrlParameter("u")) || IsNullOrEmptyString(getUrlParameter("c")))
                        window.location.href = window.location.href + "?u=" + $lf.ss.us.User.UserId + "&c=" + $lf.ss.us.User.UserIcard;
                    else
                        FillFindingUsers(getUrlParameter("u"), $lf.ss.us.User.UserName,
                            $lf.ss.us.Roles[0].Role, "0", getUrlParameter("c"));
                    FillGroups();
                    FillLanguages();
                    FillCountries();
                    $("form").on("submit", function (e) {
                        e.preventDefault();
                        var flag = 1;
                        var group = $("#sGroups").val();
                        var ucardTil = 0;
                        if (@Model===3)
                            group = $lf.ss.us.User.GroupId;
                        if (@Model ==2)
                            ucardTil = $("#CardTitular").val();
                        var dt = {
                            Name: $("#Name").val(),
                            UserLastname: $("#LastName").val(),
                            UserEmail: $("#example-email").val(),
                            GroupId: parseInt(group),
                            UserIcard: $("#userId").val(),
                            Birthdate: $("#Bdth").val(),
                            CellPhone: $("#CPhn").val(),
                            Gender: $("#Genre").val(),
                            Address: $("#Addr").val(),
                            RoleId: parseInt($("#roles").val()),
                            LanguageId: parseInt($("#languages").val()),
                            CountryId: parseInt($("#Countries").val()),
                            Flag: flag,
                            UserIcardtitular: parseInt(ucardTil),
                            Country: $("#Countries option:selected").text()
                        }
                        $.ajax({
                            type: "POST",
                            url: "/Account/CreateUser",
                            data: { usr: dt },
                            success: function () {
                                alert("Proccess sent to the queue.");
                                location.href = window.location.href;
                            },
                            error: function (xhr) {
                                alert("Opss!! we had an issue, please try again");
                                console.log(JSON.stringify(xhr));
                                return;
                            },
                            dataType: "json",
                            async: true
                        });
                    });
                });
                function FillFindingUsers(uId, uName, roleName, group, cc) {
                    $.ajax({
                        url: $lf.ss.cs.Company + "GetUsersPerParent/" + uId,
                        success: function (data) {
                            debugger;
                            $("#uNcreation").empty();
                            $("#user-process").empty();
                            $(".user-creative").hide();
                            currentId = uId;
                            var button = '<input type="submit" value="Add User" data-role="' + roleName + '" data-group="' + group + '" data-uid="' + cc + '" class="btn btn-primary btn-custom waves-effect w-md waves-light m-b-5 waves-input-wrapper" id="btnAddUsrTbt"/>';
                            $("#uNcreation").html(button);
                            var table = '<table id="datatable-uNcreation" class="table table-striped table-bordered dataTable no-footer" role="grid" aria-describedby="datatable_info"><thead><tr role="row"><th class="sorting_asc" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Name: activate to sort column descending" style="width:25%;">Name</th><th class="sorting" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width:25%;">LastName</th><th class="sorting" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" aria-label="Office: activate to sort column ascending" style="width:25%;">Role</th><th class="sorting" tabindex="0" aria-controls="datatable" rowspan="1" colspan="1" aria-label="Age: activate to sort column ascending" style="width:25%;">Email</th></tr></thead><tbody></tbody></table>';
                            $("#uNcreation").append(table);
                            $.each(data, function (i, j) {
                                if (i % 2 !== 0)
                                    $("#datatable-uNcreation").append('<tr data-cc="' + j.user_icard + '" data-uname="' + j.user_firstname + '" data-group="' + j.id_grupo + '" data-uid="' + j.user_id + '" data-role="' + j.role_description + '" role="row" class="odd selectable-row-dtb"><td class="sorting_1">' + j.user_firstname + '</td><td>' + j.user_lastname + '</td><td>' + j.role_description + '</td><td>' + j.user_email + '</td></tr >');
                                else
                                    $("#datatable-uNcreation").append('<tr data-cc="' + j.user_icard + '" data-uname="' + j.user_firstname + '" data-group="' + j.id_grupo + '" data-uid="' + j.user_id + '" data-role="' + j.role_description + '" role="row" class="even selectable-row-dtb"><td class="sorting_1">' + j.user_firstname + '</td><td>' + j.user_lastname + '</td><td>' + j.role_description + '</td><td>' + j.user_email + '</td></tr >');
                            });
                            $('#datatable-uNcreation').dataTable();
                            $('#datatable-keytable').DataTable({ keys: true });
                            $('#datatable-responsive').DataTable();
                            $('#datatable-scroller').DataTable({ ajax: "../plugins/datatables/json/scroller-demo.json", deferRender: true, scrollY: 380, scrollCollapse: true, scroller: true });
                            var table = $('#datatable-fixed-header').DataTable({ fixedHeader: true });
                            var bList = false;
                            $.each(regresives, function (i, j) {
                                if (j.id == uId) bList = true;
                            });
                            if (!bList) regresives.push({ name: uName, id: uId, role: roleName, group: group, user_icard:cc });
                            $.each(regresives, function (i, j) {
                                $("#user-process").append('<span data-cc="' + j.user_icard + '" data-uid="' + j.id + '" data-role="' + j.role + '" data-group="' + j.group + '" class="tag label label-info inner-tab-usr-selected">' + j.name + '</span>');
                            });
                            $("#datatable-uNcreation .selectable-row-dtb").click(function () {
                                if ($(this).data("role") == "SALES_LEVEL_FOUR") return;
                                FillFindingUsers($(this).data("uid"), $(this).data("uname"), $(this).data("role"), $(this).data("group"), $(this).data("cc"));
                            });
                            $("#user-process .inner-tab-usr-selected").click(function () {
                                if ($(this).data("uid") != currentId) {
                                    var all = $("#user-process .inner-tab-usr-selected");
                                    var counter = 0;
                                    var exists = false;
                                    $.each(all, function (i, j) {
                                        if (!exists) {
                                            if ($(this).data("uid") == regresives[i].id) {
                                                counter = i;
                                                exists = true;
                                            } else
                                                counter = i;
                                        }
                                    });
                                    var newList = [];
                                    for (var i = 0; i < counter; i++) {
                                        newList.push(regresives[i]);
                                    }
                                    regresives = newList;
                                    FillFindingUsers($(this).data("uid"), $(this).text(), $(this).data("role"), $(this).data("group"), $(this).data("cc"));
                                }
                            });
                            $("#btnAddUsrTbt").click(function () {
                                $(this).hide();
                                var role = $(this).data("role");
                                var group = $(this).data("group");
                                var parentId = $(this).data("uid");
                                if (parseInt(group) != 0) {
                                    $("#grouped").hide();
                                    $("#sGroups").append('<option value="' + group + '" selected=""></option>');
                                }
                                FillRoles(role);
                                $("#CardTitular").val(parentId);
                                $(".user-creative").show();
                                $("html, body").animate({ scrollTop: $(document).height() - $(window).height() });
                            });
                        },
                        error: function (xhr) {
                            console.log(JSON.stringify(xhr));
                        },
                        dataType: "json",
                        async: true
                    });
                }
                function FillRoles(roleName) {
                    $.ajax({
                        url: $lf.ss.cs.Company + "GetRoles",
                        success: function (data) {
                            $('#roles').empty();
                            $('#roles').append('<option disabled="" selected="">Select the role</option>');
                            var cr = 10000;
                            $.each(data, function (i, j) {
                                if (roleName == j.Role) cr = j.RoleLevel;
                            });
                            var ndata = [];
                            $.each(data, function (i, j) {
                                if (j.RoleLevel > cr)
                                    ndata.push(j);
                            });
                            $.each(ndata, function (i, j) {
                                $('#roles').append('<option value="' + j.RoleId + '">' + j.Role + '</option>');
                            });
                        },
                        error: function (xhr) {
                            console.log(JSON.stringify(xhr));
                        },
                        dataType: "json",
                        async: true
                    });
                }
                function FillLanguages() {
                    $.ajax({
                        url: $lf.ss.cs.Company + "GetLanguages",
                        success: function (data) {
                            $.each(data, function (i, j) {
                                $('#languages').append('<option value="' + j.LanguageId + '">' + j.LanguageDescription + '</option>');
                            });
                        },
                        error: function (xhr) {
                            console.log(JSON.stringify(xhr));
                        },
                        dataType: "json",
                        async: true
                    });
                }
                function FillGroups() {
                    $.ajax({
                        url: $lf.ss.cs.Company + "GetGroupsEntity/" + $lf.ss.us.Company.id,
                        success: function (data) {
                            if (data.length === 0) {
                                $('#sGroups').append('<option value="CG"> Create Groups </option>');
                            } else {
                                $.each(data, function (i, j) {
                                    if (!j.Group.toUpperCase().includes("ADMIN"))
                                        $('#sGroups').append('<option value="' + j.GroupId + '">' + j.Group + '</option>');
                                });
                            }
                            GroupsOptions();
                        },
                        error: function (xhr) {
                            console.log(JSON.stringify(xhr));
                        },
                        dataType: "json",
                        async: true
                    });
                }
                function FillCountries() {
                    $.ajax({
                        url: $lf.ss.cs.Company + "GetCountriesAlone",
                        success: function (data) {
                            $.each(data, function (i, j) {
                                $('#Countries').append('<option value="' + j.CountryId + '">' + j.Country + '</option>');
                            });
                        },
                        error: function (xhr) {
                            console.log(JSON.stringify(xhr));
                        },
                        dataType: "json",
                        async: true
                    });
                }
                function GroupsOptions() {
                    $("#sGroups").change(function () {
                        if ($(this).val() === "CG")
                            window.location.href = "@Url.Action("CreateGroup", "Sales")";
                        else {
                            if (!IsNullOrEmptyString($(this).val()))
                                $("#uCreation").show();
                            else
                                $("#uCreation").hide();
                        }
                    });
                }
            })()
        </script>
    }
}