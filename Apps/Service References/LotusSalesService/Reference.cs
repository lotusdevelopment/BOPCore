//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Apps.LotusSalesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LotusSalesService.IThirdPartyServices")]
    public interface IThirdPartyServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/SaleProcess", ReplyAction="http://tempuri.org/IThirdPartyServices/SaleProcessResponse")]
        ViewModels.SaleResponse SaleProcess(ViewModels.SaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/SaleProcess", ReplyAction="http://tempuri.org/IThirdPartyServices/SaleProcessResponse")]
        System.Threading.Tasks.Task<ViewModels.SaleResponse> SaleProcessAsync(ViewModels.SaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/SaleProcessBeneficiaries", ReplyAction="http://tempuri.org/IThirdPartyServices/SaleProcessBeneficiariesResponse")]
        ViewModels.SaleResponse SaleProcessBeneficiaries(ViewModels.Request.SaleRequestBeneficiaries request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/SaleProcessBeneficiaries", ReplyAction="http://tempuri.org/IThirdPartyServices/SaleProcessBeneficiariesResponse")]
        System.Threading.Tasks.Task<ViewModels.SaleResponse> SaleProcessBeneficiariesAsync(ViewModels.Request.SaleRequestBeneficiaries request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/SaleProcessCardPayment", ReplyAction="http://tempuri.org/IThirdPartyServices/SaleProcessCardPaymentResponse")]
        ViewModels.SaleResponse SaleProcessCardPayment(ViewModels.Request.SaleRequestBeneficiaries request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/SaleProcessCardPayment", ReplyAction="http://tempuri.org/IThirdPartyServices/SaleProcessCardPaymentResponse")]
        System.Threading.Tasks.Task<ViewModels.SaleResponse> SaleProcessCardPaymentAsync(ViewModels.Request.SaleRequestBeneficiaries request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/GetCountries", ReplyAction="http://tempuri.org/IThirdPartyServices/GetCountriesResponse")]
        ViewModels.Response.CountryResponse GetCountries(ViewModels.Request.CountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/GetCountries", ReplyAction="http://tempuri.org/IThirdPartyServices/GetCountriesResponse")]
        System.Threading.Tasks.Task<ViewModels.Response.CountryResponse> GetCountriesAsync(ViewModels.Request.CountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/GetPlans", ReplyAction="http://tempuri.org/IThirdPartyServices/GetPlansResponse")]
        ViewModels.Response.PlansResponse GetPlans(ViewModels.Request.PlansRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/GetPlans", ReplyAction="http://tempuri.org/IThirdPartyServices/GetPlansResponse")]
        System.Threading.Tasks.Task<ViewModels.Response.PlansResponse> GetPlansAsync(ViewModels.Request.PlansRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/PlansRequestByCountry", ReplyAction="http://tempuri.org/IThirdPartyServices/PlansRequestByCountryResponse")]
        ViewModels.Response.PlansResponse PlansRequestByCountry(ViewModels.Request.PlanByCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/PlansRequestByCountry", ReplyAction="http://tempuri.org/IThirdPartyServices/PlansRequestByCountryResponse")]
        System.Threading.Tasks.Task<ViewModels.Response.PlansResponse> PlansRequestByCountryAsync(ViewModels.Request.PlanByCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/Encrypt", ReplyAction="http://tempuri.org/IThirdPartyServices/EncryptResponse")]
        string Encrypt(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/Encrypt", ReplyAction="http://tempuri.org/IThirdPartyServices/EncryptResponse")]
        System.Threading.Tasks.Task<string> EncryptAsync(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/Decrypt", ReplyAction="http://tempuri.org/IThirdPartyServices/DecryptResponse")]
        string Decrypt(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/Decrypt", ReplyAction="http://tempuri.org/IThirdPartyServices/DecryptResponse")]
        System.Threading.Tasks.Task<string> DecryptAsync(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/CheckCustomer", ReplyAction="http://tempuri.org/IThirdPartyServices/CheckCustomerResponse")]
        ViewModels.Response.UserResponse CheckCustomer(ViewModels.Request.UserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/CheckCustomer", ReplyAction="http://tempuri.org/IThirdPartyServices/CheckCustomerResponse")]
        System.Threading.Tasks.Task<ViewModels.Response.UserResponse> CheckCustomerAsync(ViewModels.Request.UserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/CheckSale", ReplyAction="http://tempuri.org/IThirdPartyServices/CheckSaleResponse")]
        ViewModels.Response.SaleMade CheckSale(ViewModels.Request.CheckSale request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/CheckSale", ReplyAction="http://tempuri.org/IThirdPartyServices/CheckSaleResponse")]
        System.Threading.Tasks.Task<ViewModels.Response.SaleMade> CheckSaleAsync(ViewModels.Request.CheckSale request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/FilteredSites", ReplyAction="http://tempuri.org/IThirdPartyServices/FilteredSitesResponse")]
        ViewModels.Response.BranchResponse FilteredSites(ViewModels.Request.SitesPerFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThirdPartyServices/FilteredSites", ReplyAction="http://tempuri.org/IThirdPartyServices/FilteredSitesResponse")]
        System.Threading.Tasks.Task<ViewModels.Response.BranchResponse> FilteredSitesAsync(ViewModels.Request.SitesPerFilterRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IThirdPartyServicesChannel : Apps.LotusSalesService.IThirdPartyServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ThirdPartyServicesClient : System.ServiceModel.ClientBase<Apps.LotusSalesService.IThirdPartyServices>, Apps.LotusSalesService.IThirdPartyServices {
        
        public ThirdPartyServicesClient() {
        }
        
        public ThirdPartyServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ThirdPartyServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ThirdPartyServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ThirdPartyServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ViewModels.SaleResponse SaleProcess(ViewModels.SaleRequest request) {
            return base.Channel.SaleProcess(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.SaleResponse> SaleProcessAsync(ViewModels.SaleRequest request) {
            return base.Channel.SaleProcessAsync(request);
        }
        
        public ViewModels.SaleResponse SaleProcessBeneficiaries(ViewModels.Request.SaleRequestBeneficiaries request) {
            return base.Channel.SaleProcessBeneficiaries(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.SaleResponse> SaleProcessBeneficiariesAsync(ViewModels.Request.SaleRequestBeneficiaries request) {
            return base.Channel.SaleProcessBeneficiariesAsync(request);
        }
        
        public ViewModels.SaleResponse SaleProcessCardPayment(ViewModels.Request.SaleRequestBeneficiaries request) {
            return base.Channel.SaleProcessCardPayment(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.SaleResponse> SaleProcessCardPaymentAsync(ViewModels.Request.SaleRequestBeneficiaries request) {
            return base.Channel.SaleProcessCardPaymentAsync(request);
        }
        
        public ViewModels.Response.CountryResponse GetCountries(ViewModels.Request.CountryRequest request) {
            return base.Channel.GetCountries(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.Response.CountryResponse> GetCountriesAsync(ViewModels.Request.CountryRequest request) {
            return base.Channel.GetCountriesAsync(request);
        }
        
        public ViewModels.Response.PlansResponse GetPlans(ViewModels.Request.PlansRequest request) {
            return base.Channel.GetPlans(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.Response.PlansResponse> GetPlansAsync(ViewModels.Request.PlansRequest request) {
            return base.Channel.GetPlansAsync(request);
        }
        
        public ViewModels.Response.PlansResponse PlansRequestByCountry(ViewModels.Request.PlanByCountryRequest request) {
            return base.Channel.PlansRequestByCountry(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.Response.PlansResponse> PlansRequestByCountryAsync(ViewModels.Request.PlanByCountryRequest request) {
            return base.Channel.PlansRequestByCountryAsync(request);
        }
        
        public string Encrypt(string request) {
            return base.Channel.Encrypt(request);
        }
        
        public System.Threading.Tasks.Task<string> EncryptAsync(string request) {
            return base.Channel.EncryptAsync(request);
        }
        
        public string Decrypt(string request) {
            return base.Channel.Decrypt(request);
        }
        
        public System.Threading.Tasks.Task<string> DecryptAsync(string request) {
            return base.Channel.DecryptAsync(request);
        }
        
        public ViewModels.Response.UserResponse CheckCustomer(ViewModels.Request.UserRequest request) {
            return base.Channel.CheckCustomer(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.Response.UserResponse> CheckCustomerAsync(ViewModels.Request.UserRequest request) {
            return base.Channel.CheckCustomerAsync(request);
        }
        
        public ViewModels.Response.SaleMade CheckSale(ViewModels.Request.CheckSale request) {
            return base.Channel.CheckSale(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.Response.SaleMade> CheckSaleAsync(ViewModels.Request.CheckSale request) {
            return base.Channel.CheckSaleAsync(request);
        }
        
        public ViewModels.Response.BranchResponse FilteredSites(ViewModels.Request.SitesPerFilterRequest request) {
            return base.Channel.FilteredSites(request);
        }
        
        public System.Threading.Tasks.Task<ViewModels.Response.BranchResponse> FilteredSitesAsync(ViewModels.Request.SitesPerFilterRequest request) {
            return base.Channel.FilteredSitesAsync(request);
        }
    }
}
